# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: transactionhistory
# spec:
#   selector:
#     matchLabels:
#       app: transactionhistory
#   template:
#     metadata:
#       labels:
#         app: transactionhistory
#     spec:
#       serviceAccountName: boa-ksa
#       terminationGracePeriodSeconds: 5
#       containers:
#       - name: transactionhistory
#         image: gcr.io/bank-of-anthos-ci/transactionhistory:v0.5.11@sha256:943b40c612648f9dde24466c70158373122b380f70bce1cbdaefe087288d7876
#         volumeMounts:
#         - name: publickey
#           mountPath: "/root/.ssh"
#           readOnly: true
#         env:
#         - name: VERSION
#           value: "v0.5.11"
#         - name: PORT
#           value: "8080"
#         - name: ENABLE_TRACING
#           value: "true"
#         - name: ENABLE_METRICS
#           value: "true"
#         - name: POLL_MS
#           value: "100"
#         - name: CACHE_SIZE
#           value: "1000"
#         - name: CACHE_MINUTES
#           value: "60"
#         - name: HISTORY_LIMIT
#           value: "100"
#           # tell Java to obey container memory limits
#         - name: JVM_OPTS
#           value: "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
#         #- name: EXTRA_LATENCY_MILLIS
#         #  value: "5000"
#         # Valid levels are debug, info, warn, error, fatal.
#         # If no valid level is set, will default to info.
#         - name: LOG_LEVEL
#           value: "info"
#         - name: NAMESPACE
#           valueFrom:
#             fieldRef:
#               fieldPath: metadata.namespace
#         envFrom:
#         - configMapRef:
#             name: environment-config
#         # add ledger-db credentials from ConfigMap
#         - configMapRef:
#             name: ledger-db-config
#         resources:
#           requests:
#             cpu: 100m
#             memory: 512Mi
#           limits:
#             cpu: 500m
#             memory: 1Gi
#         readinessProbe:
#           httpGet:
#             path: /ready
#             port: 8080
#           initialDelaySeconds: 60
#           periodSeconds: 5
#           timeoutSeconds: 10
#         livenessProbe:
#           httpGet:
#             path: /healthy
#             port: 8080
#           initialDelaySeconds: 120
#           periodSeconds: 5
#           timeoutSeconds: 10
#       - name: cloudsql-proxy
#         resources:
#           limits:
#             cpu: "200m"
#             memory: "100Mi"
#         image: gcr.io/cloudsql-docker/gce-proxy:1.37.5@sha256:026f4f0d8a09507fa0619a577a2542e5344d2e8962c3e38dd1c0c585125fa471
#         env:
#         - name: CONNECTION_NAME
#           valueFrom:
#             secretKeyRef:
#               name: cloud-sql-admin
#               key: connectionName
#         command: ["/cloud_sql_proxy",
#                   "-instances=$(CONNECTION_NAME)=tcp:5432"]
#         securityContext:
#           runAsNonRoot: true
#       volumes:
#       - name: publickey
#         secret:
#           secretName: jwt-key
#           items:
#           - key: jwtRS256.key.pub
#             path: publickey
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: transactionhistory
# spec:
#   type: ClusterIP
#   selector:
#     app: transactionhistory
#   ports:
#   - name: http
#     port: 8080
#     targetPort: 8080

# Improved transactionhistory Deployment

apiVersion: apps/v1
kind: Deployment
metadata:
  name: transactionhistory
  labels:
    application: bank-of-anthos
    environment: development
    team: ledger
    tier: backend
spec:
  selector:
    matchLabels:
      app: transactionhistory
      application: bank-of-anthos
      environment: development
      team: ledger
      tier: backend
  template:
    metadata:
      labels:
        app: transactionhistory
        application: bank-of-anthos
        environment: development
        team: ledger
        tier: backend
      annotations:
        proxy.istio.io/config: '{ "holdApplicationUntilProxyStarts": true }'
    spec:
      serviceAccountName: boa-ksa  # keeping original serviceAccountName
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
        - name: transactionhistory
          image: gcr.io/bank-of-anthos-ci/transactionhistory:v0.5.11@sha256:943b40c612648f9dde24466c70158373122b380f70bce1cbdaefe087288d7876
          env:
            - name: VERSION
              value: "v0.5.11"
            - name: PORT
              value: "8080"
            - name: ENABLE_TRACING
              value: "true"
            - name: ENABLE_METRICS
              value: "true"
            - name: POLL_MS
              value: "100"
            - name: CACHE_SIZE
              value: "1000"
            - name: CACHE_MINUTES
              value: "60"
            - name: HISTORY_LIMIT
              value: "100"
            - name: JVM_OPTS
              value: "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Xms256m -Xmx512m"
            - name: LOG_LEVEL
              value: "info"
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          envFrom:
            - configMapRef:
                name: environment-config
            - configMapRef:
                name: ledger-db-config
          volumeMounts:
            - mountPath: /tmp
              name: tmp
            - mountPath: /root/.ssh
              name: publickey
              readOnly: true
          resources:
            requests:
              cpu: 100m
              memory: 512Mi
              ephemeral-storage: 0.5Gi
            limits:
              cpu: 500m
              memory: 1Gi
              ephemeral-storage: 0.5Gi
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 5
            timeoutSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthy
              port: 8080
            initialDelaySeconds: 120
            periodSeconds: 5
            timeoutSeconds: 10
          startupProbe:
            httpGet:
              path: /healthy
              port: 8080
            failureThreshold: 30
            periodSeconds: 10
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - all
            privileged: false
            readOnlyRootFilesystem: true
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.37.5@sha256:026f4f0d8a09507fa0619a577a2542e5344d2e8962c3e38dd1c0c585125fa471
          resources:
            limits:
              cpu: 200m
              memory: 100Mi
          env:
            - name: CONNECTION_NAME
              valueFrom:
                secretKeyRef:
                  name: cloud-sql-admin
                  key: connectionName
          command: ["/cloud_sql_proxy", "-instances=$(CONNECTION_NAME)=tcp:5432"]
          securityContext:
            runAsNonRoot: true
      volumes:
        - name: publickey
          secret:
            secretName: jwt-key
            items:
              - key: jwtRS256.key.pub
                path: publickey
        - name: tmp
          emptyDir: {}
