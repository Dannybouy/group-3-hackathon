substitutions:
  _REGION: 'us-central1'
  _REPO: 'ledger-repo'
  _CLUSTER: 'bank-of-anthos'
  _NAMESPACE: 'default'

steps:
  # 1) build & push ledgerwriter
  - name: gcr.io/cloud-builders/mvn
    dir: src/ledger/ledgerwriter
    args:
      - '-B'
      - 'compile' # Add compile goal
      - 'com.google.cloud.tools:jib-maven-plugin:build'
      - '-Dimage=$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPO/ledgerwriter:$SHORT_SHA'

  # 2) build & push balancereader
  - name: gcr.io/cloud-builders/mvn
    dir: src/ledger/balancereader
    args:
      - '-B'
      - 'compile'
      - 'com.google.cloud.tools:jib-maven-plugin:build'
      - '-Dimage=$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPO/balancereader:$SHORT_SHA'

  # 3) build & push transactionhistory
  - name: gcr.io/cloud-builders/mvn
    dir: src/ledger/transactionhistory
    args:
      - '-B'
      - 'compile'
      - 'com.google.cloud.tools:jib-maven-plugin:build'
      - '-Dimage=$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPO/transactionhistory:$SHORT_SHA'

  # 4a) build ledger-db using Dockerfile
  - name: gcr.io/cloud-builders/docker
    dir: src/ledger/ledger-db # Specify the directory containing the Dockerfile
    args:
      - build
      - '-t'
      - '$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPO/ledger-db:$SHORT_SHA'
      - '.' # Use the current directory as the build context

  # 4b) push ledger-db image
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - '$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPO/ledger-db:$SHORT_SHA'

  # 5) auth to GKE cluster
  - name: gcr.io/cloud-builders/gcloud
    entrypoint: bash
    args:
      - -c
      - |
        gcloud container clusters get-credentials $_CLUSTER \
          --region $_REGION \
          --project $PROJECT_ID

  # 6) roll out new images (Deployments)
  - name: gcr.io/cloud-builders/kubectl
    env:
      - 'CLOUDSDK_COMPUTE_REGION=$_REGION'
      - 'CLOUDSDK_CONTAINER_CLUSTER=$_CLUSTER'
    args:
      - set
      - image
      - deployment/ledgerwriter
      - ledgerwriter=$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPO/ledgerwriter:$SHORT_SHA
      - --namespace=$_NAMESPACE
  - name: gcr.io/cloud-builders/kubectl
    env:
      - 'CLOUDSDK_COMPUTE_REGION=$_REGION'
      - 'CLOUDSDK_CONTAINER_CLUSTER=$_CLUSTER'
    args:
      - set
      - image
      - deployment/balancereader
      - balancereader=$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPO/balancereader:$SHORT_SHA
      - --namespace=$_NAMESPACE
  - name: gcr.io/cloud-builders/kubectl
    env:
      - 'CLOUDSDK_COMPUTE_REGION=$_REGION'
      - 'CLOUDSDK_CONTAINER_CLUSTER=$_CLUSTER'
    args:
      - set
      - image
      - deployment/transactionhistory
      - transactionhistory=$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPO/transactionhistory:$SHORT_SHA
      - --namespace=$_NAMESPACE

  # 7) roll out new image (StatefulSet)
  - name: gcr.io/cloud-builders/kubectl
    env:
      - 'CLOUDSDK_COMPUTE_REGION=$_REGION'
      - 'CLOUDSDK_CONTAINER_CLUSTER=$_CLUSTER'
    args:
      - set
      - image
      - statefulset/ledger-db
      - postgres=$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPO/ledger-db:$SHORT_SHA
      - --namespace=$_NAMESPACE

images:
  - '$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPO/ledgerwriter:$SHORT_SHA'
  - '$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPO/balancereader:$SHORT_SHA'
  - '$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPO/transactionhistory:$SHORT_SHA'
  - '$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPO/ledger-db:$SHORT_SHA'

options:
  logging: CLOUD_LOGGING_ONLY
